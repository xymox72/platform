set dotenv-load

# üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –¥–µ–≤–µ
dev:
    cargo watch -x run

# üèó –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–¥–ª—è CI)
build-local:
    cargo fetch
    cargo build --locked

# üê≥ –°–±–æ—Ä–∫–∞ docker-–æ–±—Ä–∞–∑–∞
build-docker:
    docker build -t note-service .

# üë∑ –í—ã–±–æ—Ä —Å–±–æ—Ä–∫–∏ –ø–æ —Å—Ü–µ–Ω–∞—Ä–∏—é
build:
    just build-local

# üêò –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db:
    docker compose up -d

# ‚è≥ –ñ–¥—ë–º, –ø–æ–∫–∞ –±–∞–∑–∞ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞
wait-db:
    @echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    docker exec notes_postgres bash -c "until pg_isready -U postgres -d notes_db; do sleep 1; done"

# üîÅ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
migrate:
    just wait-db
    docker cp migrations/init.sql notes_postgres:/init.sql
    docker exec -i notes_postgres psql -U postgres -d notes_db -f /init.sql

# üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –±–∞–∑—ã
db-stop:
    docker compose down

# üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app-stop:
    @echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    docker stop note_service || true
    docker rm -f note_service || true

# üß™ –¢–µ—Å—Ç—ã
test:
    cargo test

# üßº –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
fmt:
    cargo fmt -- --check

# üßπ –õ–∏–Ω—Ç–∏–Ω–≥
lint:
    cargo clippy -- -D warnings

# üîº –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
up:
    just build-docker
    just db
    just wait-db
    just migrate
    @echo "‚úÖ –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:${PORT:=8080}"

# üîΩ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –±–∞–∑—ã
down:
    just app-stop
    just db-stop

# ‚ù§Ô∏è Healthcheck —ç–Ω–¥–ø–æ–∏–Ω—Ç
health:
    curl -s -o /dev/null -w "%{http_code}\n" http://localhost:${PORT:=8080}/health

# üî• –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker –∏ –ø—Ä–æ–µ–∫—Ç–∞
clean-all:
    just clean

    @echo "üßπ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker stop $(docker ps -aq) || true

    @echo "üóë –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."build:
    cargo build --release

test:
    cargo nextest run --all-targets

lint:
    cargo clippy --all-targets --all-features -- -D warnings

fmt:
    cargo fmt --all -- --check

    docker rm -f $(docker ps -aq) || true

    @echo "üñº –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ–±—Ä–∞–∑—ã..."
    docker rmi -f $(docker images -q) || true

    @echo "üì¶ –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–æ–º–∞..."
    docker volume rm $(docker volume ls -q) || true

    @echo "üåê –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å–µ—Ç–∏..."
    docker network rm $(docker network ls -q | grep -v "bridge\|host\|none") || true

    @echo "üßº –ß–∏—Å—Ç–∏–º builder-–∫—ç—à..."
    docker builder prune -a -f

    @echo "‚úÖ Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ."

# üßº –û—á–∏—Å—Ç–∫–∞ —Å–±–æ—Ä–∫–∏ Rust
clean:
    cargo clean
